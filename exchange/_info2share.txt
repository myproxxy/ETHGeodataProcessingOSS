Hier können wir Infos austauschen...

https://github.com/myproxxy/ETHGeodataProcessingOSSPublic


import os, sys
from osgeo import gdal
from osgeo.gdalconst import *

# register all of the drivers
gdal.AllRegister()

#Open Rasterfile
fn = 'Data/worldmap.jpg'
ds = gdal.Open(fn)
if ds is None:
    print ('Datensatz %s konnte nicht geöffnet werden' %fn)
    sys.exit(1)

os.system('gdalinfo %s' %fn) 
translatecommand = 'gdal_translate -projwin 1680 170 2200 550 %s Data/europe.tif' %fn
print ("command to run: %s" %translatecommand )
os.system(translatecommand)

#kleinere Kopie von Europa
translatecommand = 'gdal_translate -projwin 1680 170 2200 550 -outsize 50%% 50%% %s Data/europesmall.tif' %fn
print ("command to run: %s" %translatecommand) 
os.system(translatecommand)

print ("")
os.system('gdalinfo Data/europe.tif')
print ("")
os.system('gdalinfo Data/europesmall.tif')

-------------------------------------------------------------------------

# -*- coding: utf-8 -*-

import os, shutil, sys
import urllib.request
from osgeo import gdal
from osgeo import gdalconst


def download(url, dest, fileName=None):
#based on:
#http://stackoverflow.com/questions/862173/how-to-download-a-file-using-python-in-a-smarter-way/863017#863017

    print("******")
    print(url)
    print("******")
    r= urllib.request.urlopen(url)

    fileName = os.path.join(dest, fileName)
    with open(fileName, 'wb') as f:
        shutil.copyfileobj(r,f)
    r.close()

if __name__=='__main__':

    wmsfile = "sogis.gif"
    if os.path.exists(wmsfile):
        os.remove(wmsfile)

    path2save2 = "Data/" #Zielpfad
    wmslink = "https://geo.so.ch/api/wms?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&FORMAT=image%2Fpng&TRANSPARENT=true&LAYERS=ch.so.agi.hintergrundkarte_farbig&STYLES=&SRS=EPSG%3A2056&CRS=EPSG%3A2056&TILED=false&DPI=96&OPACITIES=255&t=675&WIDTH=1920&HEIGHT=710&BBOX=2607051.2375,1228517.0374999999,2608067.2375,1228892.7458333333"
    
    download(wmslink,path2save2,wmsfile)

    #Open Rasterfile
    fn = os.path.join(path2save2,wmsfile)
    ds = gdal.Open(fn, GA_ReadOnly)
    if ds is None:
        print('Could not open ' + fn)
        sys.exit(1)

    #check with gdalinfo
    os.system('gdalinfo %s' %fn)


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

# -*- coding: utf-8 -*-
import os, sys, shutil
import urllib.request
from osgeo import ogr
from osgeo import gdal
from osgeo import gdalconst

#WFS Daten von:
#http://www.are.zh.ch/internet/baudirektion/are/de/geoinformation/geodienste_uebersicht/WebFeatureService.html

def download(url, dest, fileName=None):
#based on: 
#http://stackoverflow.com/questions/862173/how-to-download-a-file-using-python-in-a-smarter-way/863017#863017
    print("******")
    print ("Start downloading of %s" %url)
    print("******")

    r= urllib.request.urlopen(url)

    try:
        fileName = os.path.join(dest, fileName)
        with open(fileName, 'wb') as f:
            shutil.copyfileobj(r,f)
        print ("Saved in %s" %fileName)
    finally:
        r.close()
        
def convert2shp(path2save2,wfsfile,outputshapefile):
    fn = os.path.join(path2save2,wfsfile)
    
    driver = ogr.GetDriverByName('ESRI Shapefile')
    if os.path.exists(outputshapefile):
        driver.DeleteDataSource(outputshapefile) 
    
    #convert GMLfile to shape - if needed...
    ogr2ogrstring = 'ogr2ogr -f "ESRI Shapefile" %s %s' %(outputshapefile,fn)
    print (ogr2ogrstring)
    os.system(ogr2ogrstring)
    print ("Conversion successful...")
    
    #... oder GML... 
    wfsfile = ogr.Open(fn)
    if wfsfile is None:
        print ("Datensatz konnte nicht geoeffnet werden.\n")
        sys.exit( 1 )
    
    layer = wfsfile.GetLayer(0)
    lname = layer.GetName()
    
    print ("Layername: ", lname)
    
    #Print out number of records:
    numftrs = layer.GetFeatureCount()
    print ("Anzahl Features in GML Datei: %d" %numftrs)
    print ("")
    
    print ("Count Field Count", layer.GetLayerDefn().GetFieldCount())	
    for feat in range(numftrs):
        for i in range(layer.GetLayerDefn().GetFieldCount()):
            field_defn = layer.GetLayerDefn().GetFieldDefn(i)
        try:
            print ("  %s: %s" %(field_defn.GetName(), layer.GetFeature(feat).GetField(i)))
        except:
            pass
        print() 
    
    
    #Get Extent
    extent = layer.GetExtent()
    print ("Ausdehnung:", extent)
    print ("Oben-links:", extent[0], extent[3])
    print ("Unten-rechts:", extent[1], extent[2])


if __name__=='__main__':

    ######################   
    #Punktdaten:     
    wfsfile = "testpoints.gml"
    outputshapefile = 'wfstestpoints.shp'
    path2save2 = "Data/"
    wfsurl = "http://maps.zh.ch/wfs/HaltestellenZHWFS?SERVICE=WFS&VERSION=1.1.0&Request=getfeature&TYPENAME=haltestellen&MAXFEATURES=30"
    download(wfsurl,path2save2 ,wfsfile)
    
    convert2shp(path2save2,wfsfile,outputshapefile)

    #Liniendaten:     
    wfsfile = "testlines.gml"
    outputshapefile = 'wfstestlines.shp'
    path2save2 = "Data/"
    wfsurl = "http://maps.zh.ch/wfs/GemZHWFS?SERVICE=WFS&VERSION=1.1.0&Request=getfeature&TYPENAME=grenzen&MAXFEATURES=100"

    download(wfsurl,path2save2 ,wfsfile)
    convert2shp(path2save2,wfsfile,outputshapefile)
